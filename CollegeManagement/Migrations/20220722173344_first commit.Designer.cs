// <auto-generated />
using System;
using CollegeManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeManagement.Migrations
{
    [DbContext(typeof(collegemanagementContext))]
    [Migration("20220722173344_first commit")]
    partial class firstcommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("CollegeManagement.Models.Staffdetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("address");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("designation");

                    b.Property<int>("Doj")
                        .HasColumnType("int")
                        .HasColumnName("doj");

                    b.Property<int?>("Staffid")
                        .HasColumnType("int")
                        .HasColumnName("staffid");

                    b.Property<string>("Staffname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("staffname");

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("stream");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Staffid" }, "staffid_idx");

                    b.ToTable("staffdetails", (string)null);
                });

            modelBuilder.Entity("CollegeManagement.Models.Studentdetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("address");

                    b.Property<int>("Batch")
                        .HasColumnType("int")
                        .HasColumnName("batch");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("department");

                    b.Property<string>("Phoneno")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("phoneno");

                    b.Property<int?>("Studentid")
                        .HasColumnType("int")
                        .HasColumnName("studentid");

                    b.Property<string>("Studentname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("studentname");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Studentid" }, "studentid_idx");

                    b.ToTable("studentdetails", (string)null);
                });

            modelBuilder.Entity("CollegeManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("email");

                    b.Property<sbyte>("Isadmin")
                        .HasColumnType("tinyint")
                        .HasColumnName("isadmin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("CollegeManagement.Models.Staffdetail", b =>
                {
                    b.HasOne("CollegeManagement.Models.User", "Staff")
                        .WithMany("Staffdetails")
                        .HasForeignKey("Staffid")
                        .HasConstraintName("staffid");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CollegeManagement.Models.Studentdetail", b =>
                {
                    b.HasOne("CollegeManagement.Models.User", "Student")
                        .WithMany("Studentdetails")
                        .HasForeignKey("Studentid")
                        .HasConstraintName("studentid");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegeManagement.Models.User", b =>
                {
                    b.Navigation("Staffdetails");

                    b.Navigation("Studentdetails");
                });
#pragma warning restore 612, 618
        }
    }
}
